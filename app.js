const express = require('express');
const bodyParser = require('body-parser');
const app = express();
const api = require('vk-easy');

const checkDaysDB = require('./db/checkDaysDB');
const addDayDB = require('./db/addDayDB');

const {TOKEN, GROUP, CHAT, CHAT_TEST, PHOTO, TEST_FLAG} = require('./config');

app.use(bodyParser.urlencoded({extended: true}));
app.use(bodyParser.json());

const messages = [', —Å —Ç–≤–æ–∏–º –î–Ω—ë–º! –ü—É—Å—Ç—å —ç—Ç–æ—Ç –¥–µ–Ω—å —Å—Ç–∞–Ω–µ—Ç –¥–ª—è —Ç–µ–±—è —Å–∞–º—ã–º —Å—á–∞—Å—Ç–ª–∏–≤—ã–º –≤ –≥–æ–¥—É. –ñ–µ–ª–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏—è –∏ –ø–æ–∏—Å–∫–∞ —Å–µ–±—è!üíï',
                   ', –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Ç–µ–±—è —Å –î–Ω—ë–º –†–æ–∂–¥–µ–Ω–∏—è!üéà –û—Ç –ª–∏—Ü–∞ –æ—Ç—Ä—è–¥–∞ –∂–µ–ª–∞–µ–º —É—Å–ø–µ—à–Ω–æ–≥–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –®–∫–æ–ª—ã, –∫—Ä—É—Ç–æ–π –ø—Ä–æ–∫–∞—á–∫–∏ –∏ –ø–æ—Å–ª—É—à–Ω—ã—Ö –¥–µ—Ç–µ–π –Ω–∞ —Å–º–µ–Ω–∞—Ö!',
                    '. –ò–º–µ–Ω–Ω–æ —Å–µ–≥–æ–¥–Ω—è –¥–æ–ª–∂–Ω—ã –∏—Å–ø–æ–ª–Ω–∏—Ç—å—Å—è –≤—Å–µ —á—É–¥–µ—Å–∞ –Ω–∞ —Å–≤–µ—Ç–µ, –ø–æ—Ç–æ–º—É —á—Ç–æ —É —Ç–µ–±—è –î–µ–Ω—å –†–æ–∂–¥–µ–Ω–∏—è üíú –ú—ã –∂–µ–ª–∞–µ–º –ø—Ä–∏—Ç–≤–æ—Ä–µ–Ω–∏—è –≤—Å–µ—Ö —Ç–≤–æ–∏—Ö –º–µ—á—Ç –≤ –∂–∏–∑–Ω—å, –∞ —è—Ä–∫–∏—Ö –∫—Ä–∞—Å–æ–∫ –±—ã–ª–æ —Ç–∞–∫ –º–Ω–æ–≥–æ, —á—Ç–æ–±—ã —Ö–≤–∞—Ç–∏–ª–æ —Ä–∞–∑—É–∫—Ä–∞—Å–∏—Ç—å –≤–µ—Å—å —ç—Ç–æ—Ç —Å–≤–µ—Ç ‚òÄ–° –î–Ω–µ–º –†–æ–∂–¥–µ–Ω–∏—è! –ö—Ä–∞—Å–æ—Ç—ã, –∑–¥–æ—Ä–æ–≤—å—è –∏ —Ç–∞–ª–∞–Ω—Ç–æ–≤ —Ç–µ–±–µ! üå∏',
                    ', c –î–Ω—ë–º –†–æ–∂–¥–µ–Ω–∏—è! ¬´–ê—Ç–º–æ—Å—Ñ–µ—Ä–∞¬ª –∏—Å–∫—Ä–µ–Ω–Ω–µ –∂–µ–ª–∞–µ—Ç —Ç–µ–±–µ —É—Å–ø–µ—Ö–æ–≤ –≤ —Ç–≤–æ–∏—Ö –Ω–∞—á–∏–Ω–∞–Ω–∏—è—Ö. –ü—É—Å—Ç—å —Ç–≤–æ–∏ –º–µ—á—Ç—ã –∏—Å–ø–æ–ª–Ω—è—é—Ç—Å—è –ª–µ–≥–∫–æ –∏ –ø—Ä–æ—Å—Ç–æ!',
                    '. –ú—ã —Ç—É—Ç —É–∑–Ω–∞–ª–∏, —á—Ç–æ —É –æ–¥–Ω–æ–≥–æ —è—Ä–∫–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ —Å–µ–≥–æ–¥–Ω—è –î–µ–Ω—å –†–æ–∂–¥–µ–Ω–∏—è! –ñ–µ–ª–∞–µ–º, —á—Ç–æ–±—ã —Ç–µ–±—è –æ–∫—Ä—É–∂–∞–ª–∏ —Å–∞–º—ã–µ –ª—É—á—à–∏–µ –ª—é–¥–∏ ü§© –ù–æ –≥–ª–∞–≤–Ω–æ–µ, —Å—á–∞—Å—Ç—å—è —Ç–µ–±–µ!üòä –° –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–º!',
                    ', –Ω–∞—à –ª—É—á–µ–∑–∞—Ä–Ω—ã–π —á–µ–ª–æ–≤–µ–∫! –ú—ã –∂–µ–ª–∞–µ–º, —á—Ç–æ–±—ã –≤ —Ç–≤–æ–µ–π –∂–∏–∑–Ω–∏ –±—ã–ª–æ –±–æ–ª—å—à–µ –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω—ã—Ö –¥–µ–Ω—å–∫–æ–≤ –∏ –ø—Ä–∏—è—Ç–Ω—ã—Ö –º–µ–ª–æ—á–µ–π. –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å —Ç–≤–æ–∏–º –î–Ω—ë–º!üéâ',
                    ', –º—ã —Ä–∞–¥—ã, —á—Ç–æ —Ç—ã —Å –Ω–∞–º–∏! –ñ–µ–ª–∞–µ–º, —á—Ç–æ–±—ã –®–í–ê —Ç–µ–±–µ –¥–∞–ª–∞—Å—å –ª–µ–≥–∫–æ –∏ –Ω–∞ —Å–º–µ–Ω–µ –¥–µ—Ç–∏ –∑–∞–∂–≥–ª–∏ —Ç–≤–æ—ë —Å–µ—Ä–¥—Ü–µ —Å–≤–æ–µ–π –ª—é–±–æ–≤—å—é! –° –î–Ω—ë–º –†–æ–∂–¥–µ–Ω–∏—è!ü•≥',
                    ', –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Ç–µ–±—è —Å –î–Ω—ë–º –†–æ–∂–¥–µ–Ω–∏—è, –±—É–¥—É—â–∏–π –±–æ–µ—Ü ¬´–ê—Ç–º–æ—Å—Ñ–µ—Ä—ã¬ª! –ü—É—Å—Ç—å –≤—Å–µ —Ç–≤–æ–∏ –º–µ—á—Ç—ã —Å–±—É–¥—É—Ç—Å—è, –∞ –≤—Å–µ —Ü–µ–ª–∏ –±—É–¥—É—Ç –¥–æ—Å—Ç–∏–≥–Ω—É—Ç—ã. –ë—É–¥—å –µ—â—ë —è—Ä—á–µ –∏ –∑–∞—Ä—è–∂–∞–π —ç—Ç–∏–º –¥—Ä—É–≥–∏—Öüíô'

];

const keyboard = JSON.stringify({
    one_time: false,
    // inline: true,
    buttons: [
        [{
            action: {
                type: "open_link",
                link: 'http://vk.me/shva20',
                label: "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞–º",
                payload: {command: "ask_org"}
            },
            // "color": "secondary"
        }],
    ]});

console.log('–ü—Ä–∏–≤–µ—Ç');

api('messages.getConversationMembers', {
    v:5.103,
    access_token: TOKEN,
    peer_id: CHAT,
    fields: 'bdate',
    group_id: GROUP,
}).then(res => {
    let Users = res.response.profiles;

    api('utils.getServerTime', {
        v:5.103,
        access_token: TOKEN,
    }).then(async res => {
        // console.log(res.response);
        let date = new Date(res.response * 1000);
        let dateStr =  (date.getDay()+1).toString() + '.' + (date.getMonth()+1).toString() + '.' + (date.getFullYear()).toString();
        console.log('–°–µ–≥–æ–¥–Ω—è ', dateStr);

        if (await checkDaysDB(dateStr)) {
            console.log('–°–µ–≥–æ–¥–Ω—è –µ—â—ë –Ω–µ –ø–æ–∑–¥—Ä–∞–≤–ª—è–ª–∏');

            if (TEST_FLAG === '1') {
                Users[0].bdate = (date.getDay() + 1).toString() + '.' + (date.getMonth() + 1).toString();
                console.log('Test: ', Users[0].bdate)
            }

            let users_with_bday = [];
            Users.forEach(user => {
                if (user.bdate !== undefined) {
                    if (date.getDay() + 1 === parseInt(user.bdate.split('.')[0]) && date.getMonth() + 1 === parseInt(user.bdate.split('.')[1])) {
                        users_with_bday.push('@id' + user.id + '(' + user.first_name + ')');
                    }
                }
            });
            console.log(users_with_bday);

            if (users_with_bday.length > 0) {
                let text = users_with_bday.join(', ').replace(/,\s([^,]+)$/, ' –∏ $1');
                text += messages[Math.floor((Math.random() * messages.length))];
                if (users_with_bday.length > 1) {
                    text = text
                        .replace('—Ç–µ–±—è', '–≤–∞—Å')
                        .replace('—Ç–µ–±–µ', '–≤–∞–º')
                        .replace('—Ç–≤–æ–∏–º', '–≤–∞—à–∏–º')
                        .replace('—Ç–≤–æ–∏—Ö','–≤–∞—à–∏—Ö')
                        .replace('—Ç–≤–æ–∏','–≤–∞—à–∏')
                        .replace('—Ç—ã', '–≤—ã')
                        .replace('–Ω–∞—à –ª—É—á–µ–∑–∞—Ä–Ω—ã–π —á–µ–ª–æ–≤–µ–∫','–Ω–∞—à–∏ –ª—É—á–µ–∑–∞—Ä–Ω—ã–µ —Ä–µ–±—è—Ç–∞')
                        .replace('–±—É–¥—É—â–∏–π –±–æ–µ—Ü','–±—É–¥—É—â–∏–µ –±–æ–π—Ü—ã')
                        .replace('–ë—É–¥—å','–ë—É–¥—å—Ç–µ')
                        .replace('–∑–∞—Ä—è–∂–∞–π', '–∑–∞—Ä—è–∂–∞–π—Ç–µ');
                }
                console.log(text);

                api('messages.send', {
                    v: 5.103,
                    access_token: TOKEN,
                    group_id: GROUP,
                    peer_id: CHAT,
                    random_id: Math.floor(Math.random() * 999999999),
                    message: text,
                    keyboard: keyboard,
                    attachment: PHOTO,
                }).then(console.log)
            } else {
                console.log('–ù–µ—Ç –î–† —Å–µ–≥–æ–¥–Ω—è')
            }
            await addDayDB(dateStr);
        }
        else {
            console.log('Heroku, –∏–¥–∏ –Ω–∞—Ö—É–π, —Å–µ–≥–æ–¥–Ω—è —É–∂–µ –ø–æ–∑–¥—Ä–∞–≤–ª—è–ª–∏!')
        }
    });
});